# Generated by Django 3.2.16 on 2022-11-23 06:45

import common.thumbnails
import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('categories', '0001_initial'),
        ('regions', '0001_initial'),
        ('administration_units', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('_search_id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False)),
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(max_length=63)),
                ('last_name', models.CharField(max_length=63)),
                ('nickname', models.CharField(blank=True, max_length=63)),
                ('birth_name', models.CharField(blank=True, max_length=63)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('birthday', models.DateField(null=True)),
                ('health_issues', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateField(default=datetime.date.today)),
                ('internal_note', models.TextField(blank=True)),
                ('_import_id', models.CharField(default='', max_length=255)),
                ('_str', models.CharField(max_length=255)),
                ('health_insurance_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='users', to='categories.healthinsurancecompany')),
                ('roles', models.ManyToManyField(related_name='users', to='categories.RoleCategory')),
                ('sex', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='users', to='categories.sexcategory')),
            ],
            options={
                'ordering': ('-id',),
                'unique_together': {('first_name', 'last_name', 'birthday')},
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=63)),
                ('description', models.TextField(blank=True)),
                ('for_beginners', models.BooleanField(default=False)),
                ('is_full', models.BooleanField(default=False)),
                ('is_unexplored', models.BooleanField(default=False)),
                ('volunteering_work', models.TextField(blank=True)),
                ('volunteering_work_done', models.TextField(blank=True)),
                ('volunteering_work_goals', models.TextField(blank=True)),
                ('options_around', models.TextField(blank=True)),
                ('facilities', models.TextField(blank=True)),
                ('web', models.URLField(blank=True)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('gps_location', django.contrib.gis.db.models.fields.PointField(null=True, srid=4326)),
                ('_import_id', models.CharField(default='', max_length=15)),
                ('accessibility_from_brno', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='categories.locationaccessibilitycategory')),
                ('accessibility_from_prague', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='categories.locationaccessibilitycategory')),
                ('program', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='categories.locationprogramcategory')),
                ('region', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='locations', to='regions.region')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='UserEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('order', models.PositiveSmallIntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='all_emails', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='UserContactAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=127)),
                ('city', models.CharField(max_length=63)),
                ('zip_code', models.CharField(max_length=5)),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='regions.region')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='contact_address', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('id',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserClosePerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=63)),
                ('last_name', models.CharField(max_length=63)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='close_person', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('id',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=127)),
                ('city', models.CharField(max_length=63)),
                ('zip_code', models.CharField(max_length=5)),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='regions.region')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='address', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('id',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid_since', models.DateField()),
                ('valid_till', models.DateField()),
                ('_import_id', models.CharField(default='', max_length=15)),
                ('approved_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='approved_qualifications', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='qualifications', to='categories.qualificationcategory')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='qualifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField()),
                ('_import_id', models.CharField(default='', max_length=15)),
                ('administration_unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='memberships', to='administration_units.administrationunit')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='memberships', to='categories.membershipcategory')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='LocationPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', common.thumbnails.ThumbnailImageField(upload_to='location_photos')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='bis.location')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='LocationPatron',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=63)),
                ('last_name', models.CharField(max_length=63)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('location', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='patron', to='bis.location')),
            ],
            options={
                'ordering': ('id',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LocationContactPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=63)),
                ('last_name', models.CharField(max_length=63)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('location', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='contact_person', to='bis.location')),
            ],
            options={
                'ordering': ('id',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=63)),
                ('is_canceled', models.BooleanField(default=False)),
                ('is_closed', models.BooleanField(default=False)),
                ('start', models.DateTimeField()),
                ('end', models.DateField()),
                ('number_of_sub_events', models.PositiveIntegerField(default=1)),
                ('online_link', models.URLField(blank=True, help_text='Vyplňte, pokud se událost koná online')),
                ('is_attendance_list_required', models.BooleanField(default=False)),
                ('is_internal', models.BooleanField(default=False)),
                ('internal_note', models.TextField(blank=True)),
                ('_import_id', models.CharField(default='', max_length=15)),
                ('duration', models.PositiveIntegerField()),
                ('administration_units', models.ManyToManyField(related_name='events', to='administration_units.AdministrationUnit')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='events', to='categories.eventcategory')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='events', to='categories.eventgroupcategory')),
                ('intended_for', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='events', to='categories.eventintendedforcategory')),
                ('location', models.ForeignKey(blank=True, help_text='Zobrazí se na webu jako místo konání akce', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='events', to='bis.location')),
                ('main_organizer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='events_where_was_as_main_organizer', to=settings.AUTH_USER_MODEL)),
                ('other_organizers', models.ManyToManyField(blank=True, related_name='events_where_was_organizer', to=settings.AUTH_USER_MODEL)),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='events', to='categories.eventprogramcategory')),
            ],
            options={
                'ordering': ('-start',),
            },
        ),
    ]
