# Generated by Django 3.2.17 on 2023-02-07 21:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bis', '0011_alter_event_online_link'),
        ('administration_units', '0005_administrationunit_gps_location'),
        ('game_book_categories', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_hidden', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('comment', models.TextField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='game_comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('id',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('is_hidden', models.BooleanField(default=False)),
                ('game_id', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('is_original', models.BooleanField(default=False)),
                ('origin', models.TextField(blank=True)),
                ('stars', models.PositiveSmallIntegerField(blank=True, choices=[(1, '★'), (2, '★★'), (3, '★★★'), (4, '★★★★'), (5, '★★★★★')], null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('physical_note', models.TextField(blank=True)),
                ('mental_note', models.TextField(blank=True)),
                ('location_note', models.TextField(blank=True)),
                ('participant_number_note', models.TextField(blank=True)),
                ('participant_age_note', models.TextField(blank=True)),
                ('game_length_note', models.TextField(blank=True)),
                ('preparation_length_note', models.TextField(blank=True)),
                ('organizers_number_note', models.TextField(blank=True)),
                ('material_requirement_note', models.TextField(blank=True)),
                ('short_description', models.CharField(max_length=250)),
                ('goal', models.TextField(blank=True)),
                ('description', models.TextField()),
                ('motivation', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('administration_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='games', to='administration_units.administrationunit')),
                ('contributor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='games', to=settings.AUTH_USER_MODEL)),
                ('favourites', models.ManyToManyField(related_name='favourite_games', to=settings.AUTH_USER_MODEL)),
                ('game_length_category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='games', to='game_book_categories.gamelengthcategory')),
                ('location_category', models.ManyToManyField(related_name='games', to='game_book_categories.LocationCategory')),
                ('material_requirement_category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='games', to='game_book_categories.materialrequirementcategory')),
                ('mental_category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='games', to='game_book_categories.mentalcategory')),
                ('organizers_number_category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='games', to='game_book_categories.organizersnumbercategory')),
                ('participant_age_category', models.ManyToManyField(related_name='games', to='game_book_categories.ParticipantAgeCategory')),
                ('participant_number_category', models.ManyToManyField(related_name='games', to='game_book_categories.ParticipantNumberCategory')),
                ('physical_category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='games', to='game_book_categories.physicalcategory')),
                ('preparation_length_category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='games', to='game_book_categories.preparationlengthcategory')),
                ('tags', models.ManyToManyField(related_name='games', to='game_book_categories.Tag')),
                ('thumbs_up', models.ManyToManyField(related_name='thumbed_up_games', to=settings.AUTH_USER_MODEL)),
                ('watchers', models.ManyToManyField(related_name='watched_games', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('id',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlayedAt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='played_games', to='bis.event')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='played_at', to='game_book.game')),
            ],
            options={
                'ordering': ('id',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlayedAtFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='game_files')),
                ('played_at', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='game_book.playedat')),
            ],
            options={
                'ordering': ('id',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GameList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('games', models.ManyToManyField(related_name='game_lists', to='game_book.Game')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_lists', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('id',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GameFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='game_files')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='game_book.game')),
            ],
            options={
                'ordering': ('id',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CommentFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='game_files')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='game_book.comment')),
            ],
            options={
                'ordering': ('id',),
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='comment',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='game_book.game'),
        ),
    ]
